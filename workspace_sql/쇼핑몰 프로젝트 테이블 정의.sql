-- 쇼핑몰 프로젝트 테이블 정의
-- 테이블 종류 --
-- 1. 회원 정보 테이블
-- 2. 상품 카테고리 테이블
-- 3. 상품 정보 테이블
-- 4. 상품 이미지 정보 테이블
-- 5. 장바구니 정보 테이블
-- 6. 구매 정보 테이블

-- 1. 회원 정보 테이블
-- 권한 : USER, ADMIN
CREATE TABLE SHOP_MEMBER (
	MEM_ID VARCHAR(50) PRIMARY KEY
	, MEM_PW VARCHAR(100) NOT NULL
	, MEM_NAME VARCHAR(50) NOT NULL
	, MEM_TEL VARCHAR(30) UNIQUE
	, POST VARCHAR(10)
	, MEM_ADDR VARCHAR(50) 
	, ADDR_DETAIL VARCHAR(100)
	, MEM_EMAIL VARCHAR(100)
	, MEM_ROLE VARCHAR(30) DEFAULT 'USER'
);
SELECT * FROM SHOP_MEMBER;

-- 2. 상품 카테고리 테이블(소설, 에세이, 인터넷/IT)
CREATE TABLE ITEM_CATEGORY (
	CATE_CODE INT AUTO_INCREMENT PRIMARY KEY
	, CATE_NAME VARCHAR(50) NOT NULL UNIQUE
);

INSERT INTO item_category VALUES (1, '인터넷/IT');
INSERT INTO item_category VALUES (2, '소설/에세이');
INSERT INTO item_category VALUES (3, '자기계발');

-- 3. 상품 정보 테이블
-- ITEM_STATUS(상품 상태) : (FOR_SALE)판매 중, SOLD_OUT(품절)
CREATE TABLE SHOP_ITEM (
	ITEM_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ITEM_NAME VARCHAstudy_dbR(50) NOT NULL UNIQUE
	, ITEM_PRICE INT NOT NULL
	, ITEM_INTRO VARCHAR(100)
	, ITEM_STOCK INT DEFAULT 20
	, ITEM_STATUS VARCHAR(10) DEFAULT 'FOR_SALE'
	, CATE_CODE INT NOT NULL REFERENCES ITEM_CATEGORY (CATE_CODE)
);

-- 상품 이미지 정보 테이블
-- ORICIN_FILE_NAME : 원본 파일명
-- ATTACHED_FILE_NAME : 첨부된 파일명
-- IS_MAIN : 대표 이미지 여부 (Y, N)
CREATE TABLE ITEM_IMG (
	IMG_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ORIGIN_FILE_NAME VARCHAR(100) NOT NULL
	, ATTACHED_FILE_NAME VARCHAR(100) NOT NULL
	, IS_MAIN VARCHAR(5) NOT NULL
	, ITEM_CODE INT NOT NULL REFERENCES shop_item (ITEM_CODE) ON DELETE CASCADE
);

INSERT INTO ITEM_IMG (ORICIN_FILE_NAME, ATTACHED_FILE_NAME, IS_MAIN, ITEM_CODE)
VALUES
('abc.jpg', 'aaa.jpg', 'Y', 1),
('FDSFS.jpg', 'FFFF.jpg', 'N', 1);



SELECT * FROM ITEM_IMG;

SELECT * FROM item_category;

UPDATE shop_member
SET
MEM_ROLE =  'ADMIN'
WHERE MEM_ROLE = 'admin';

DELETE FROM shop_member;
SELECT * FROM shop_member;

UPDATE shop_member
SET
MEM_ROLE = 'ADMIN'
WHERE MEM_ID = 'java';

SELECT * FROM shop_item;
SELECT * FROM item_img;

DELETE FROM shop_item;

SELECT ITEM.ITEM_CODE
	, ITEM_NAME
	, ITEM_PRICE
	, ATTACHED_FILE_NAME
FROM shop_item ITEM, item_img IMG
WHERE ITEM.ITEM_CODE = IMG.ITEM_CODE
AND IS_MAIN = 'Y'
ORDER BY ITEM_CODE DESC;

-- 현재 저장된 ITEM_CODE의 가장 큰 값을 조회
SELECT MAX(ITEM_CODE)
FROM shop_item;

CREATE TABLE test_SHOP_item (
	ITEM_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ITEM_NAME VARCHAR(50)
);

SELECT * FROM TEST_SHOP_ITEM;
INSERT INTO TEST_SHOP_ITEM (ITEM_NAME) VALUES ('AAA');

INSERT INTO TEST_SHOP_ITEM (ITEM_CODE, ITEM_NAME) VALUES (2, 'AAA');

DELETE FROM TEST_SHOP_ITEM; 

-- 다음에 INSERT 할 때 들어갈 ITEM_CODE 조회
-- 데이터가 하나도 없다면 1을 조회
SELECT IFNULL(MAX(ITEM_CODE), 0) + 1 
FROM TEST_SHOP_ITEM;

-- 장바구니 정보 테이블
CREATE TABLE SHOP_CART(
	CART_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ITEM_CODE INT NOT NULL REFERENCES shop_item(ITEM_CODE)
	, CART_CNT INT NOT NULL
	, MEM_ID VARCHAR(50) NOT NULL REFERENCES shop_member(MEM_ID)
	, CART_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);

SELECT ITEM.ITEM_CODE
	, ITEM_NAME
	, ITEM_PRICE
	, ITEM_INTRO
	, ATTACHED_FILE_NAME
	, IS_MAIN
FROM shop_item ITEM, item_img IMG
WHERE ITEM.ITEM_CODE = IMG.ITEM_CODE
AND ITEM.ITEM_CODE = 1;

SELECT * FROM shop_item;

SELECT * FROM item_img;